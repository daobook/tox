# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2022, holger krekel and others
# This file is distributed under the same license as the tox package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: tox 3.24\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-31 13:56+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../docs/example/pytest.rst:2
msgid "pytest and tox"
msgstr ""

#: ../../docs/example/pytest.rst:4
msgid ""
"It is easy to integrate `pytest`_ runs with tox.  If you encounter "
"issues, please check if they are `listed as a known issue`_ and/or use "
"the :doc:`support channels <../support>`."
msgstr ""

#: ../../docs/example/pytest.rst:9
msgid "Basic example"
msgstr ""

#: ../../docs/example/pytest.rst:11 ../../docs/example/pytest.rst:37
msgid "Assuming the following layout:"
msgstr ""

#: ../../docs/example/pytest.rst:18 ../../docs/example/pytest.rst:45
msgid "and the following ``tox.ini`` content:"
msgstr ""

#: ../../docs/example/pytest.rst:29
msgid ""
"you can now invoke ``tox`` in the directory where your ``tox.ini`` "
"resides. ``tox`` will sdist-package your project, create two virtualenv "
"environments with the ``python3.5`` and ``python3.6`` interpreters, "
"respectively, and will then run the specified test command in each of "
"them."
msgstr ""

#: ../../docs/example/pytest.rst:35
msgid "Extended example: change dir before test and use per-virtualenv tempdir"
msgstr ""

#: ../../docs/example/pytest.rst:58
msgid ""
"you can invoke ``tox`` in the directory where your ``tox.ini`` resides. "
"Differently than in the previous example the ``pytest`` command will be "
"executed with a current working directory set to ``tests`` and the test "
"run will use the per-virtualenv temporary directory."
msgstr ""

#: ../../docs/example/pytest.rst:66
msgid "Using multiple CPUs for test runs"
msgstr ""

#: ../../docs/example/pytest.rst:68
msgid ""
"``pytest`` supports distributing tests to multiple processes and hosts "
"through the `pytest-xdist`_ plugin.  Here is an example configuration to "
"make ``tox`` use this feature:"
msgstr ""

#: ../../docs/example/pytest.rst:86
msgid "Known issues and limitations"
msgstr ""

#: ../../docs/example/pytest.rst:88
msgid ""
"**Too long filenames**. you may encounter \"too long filenames\" for "
"temporarily created files in your pytest run.  Try to not use the \"--"
"basetemp\" parameter."
msgstr ""

#: ../../docs/example/pytest.rst:91
msgid ""
"**installed-versus-checkout version**.  ``pytest`` collects test modules "
"on the filesystem and then tries to import them under their `fully "
"qualified name`_. This means that if your test files are importable from "
"somewhere then your ``pytest`` invocation may end up importing the "
"package from the checkout directory rather than the installed package."
msgstr ""

#: ../../docs/example/pytest.rst:98
msgid ""
"This issue may be characterised by pytest test-collection error messages,"
" in python 3.x environments, that look like:"
msgstr ""

#: ../../docs/example/pytest.rst:109
msgid "There are a few ways to prevent this."
msgstr ""

#: ../../docs/example/pytest.rst:111
msgid ""
"With installed tests (the tests packages are known to ``setup.py``), a "
"safe and explicit option is to give the explicit path "
"``{envsitepackagesdir}/mypkg`` to pytest. Alternatively, it is possible "
"to use ``changedir`` so that checked-out files are outside the import "
"path, then pass ``--pyargs mypkg`` to pytest."
msgstr ""

#: ../../docs/example/pytest.rst:118
msgid ""
"With tests that won't be installed, the simplest way to run them against "
"your installed package is to avoid ``__init__.py`` files in test "
"directories; pytest will still find and import them by adding their "
"parent directory to ``sys.path`` but they won't be copied to other places"
" or be found by Python's import system outside of pytest."
msgstr ""

